import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;

public class BoardGame {
    // store calculated results
    List<BigInteger> memo = new ArrayList<>();

    /**
	 * Calculate number of ways to arrive at a certain point using formula:
	 * f(0) = 0
	 * if n <= 6: f(n) = 2 to the power of n
     * if n > 6: f(n) = f(n-1) + f(n-2) + f(n-3) + f(n-4) + f(n-5) + f(n-6)
     */
    BigInteger calculateWays(int n) {
        for (int i = memo.size(); i <= n; ++i) {
            if (i <= 6) {
                memo.add(i == 0 ? BigInteger.ZERO : BigInteger.valueOf((long) Math.pow(2, i - 1)));
            } else {
                memo.add(memo.get(i - 1).add(memo.get(i - 2)).add(memo.get(i - 3)).add(memo.get(i - 4)).add(memo.get(i - 5)).add(memo.get(i - 6)));
            }

        }
        return memo.get(n);
    }

    public static void main(String[] args) {
        BoardGame game = new BoardGame();
        int n = 610;
        System.out.println("Number of ways to move " + n + " spaces: " + game.calculateWays(n));
    }
}
